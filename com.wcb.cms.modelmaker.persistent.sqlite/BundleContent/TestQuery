select * from entitydtls where entity_name = 'WCOMilestoneInst'

update entitydtls set dtls_name = 'milestoneInstID', DTLS_SEARCH_NAME='MILESTONEINSTID' where entity_name = 'WCOMilestoneInst' and DTLS_NAME = 'milestoneInstanceID';
insert into entitydtls(ENTITY_NAME, DTLS_NAME, DOMAIN_DEF, ENTITY_SEARCH_NAME , DTLS_SEARCH_NAME) values ('WCOMilestoneInst', 'busAddedDtm', 'CURAM_DATETIME', 'WCOMILESTONEINST','BUSADDEDDTM');
insert into entitydtls(ENTITY_NAME, DTLS_NAME, DOMAIN_DEF, ENTITY_SEARCH_NAME , DTLS_SEARCH_NAME) values ('WCOMilestoneInst', 'busLstUpdDtm', 'CURAM_DATETIME', 'WCOMILESTONEINST','BUSLSTUPDDTM');
insert into entitydtls(ENTITY_NAME, DTLS_NAME, DOMAIN_DEF, ENTITY_SEARCH_NAME , DTLS_SEARCH_NAME) values ('WCOMilestoneInst', 'busAddedUserID', 'BUSINESS_ADDED_USERID', 'WCOMILESTONEINST','BUSADDEDUSERID');
insert into entitydtls(ENTITY_NAME, DTLS_NAME, DOMAIN_DEF, ENTITY_SEARCH_NAME , DTLS_SEARCH_NAME) values ('WCOMilestoneInst', 'busLstUpdUserID', 'BUSINESS_LASTUPD_USERID', 'WCOMILESTONEINST','BUSLSTUPDUSERID');

SELECT * FROM ENTITYDTLS WHERE ENTITY_SEARCH_NAME='CLMPLNEVTTMPLT'

 ENTITY_NAME                   DTLS_NAME                     DOMAIN_DEF                              ENTITY_SEARCH_NAME            DTLS_SEARCH_NAME
 ----------------------------- ----------------------------- --------------------------------------- ----------------------------- -----------------------------
 DisplayUserSchedule           userSchedule                  USER_DAILY_SCHEDULE                     DISPLAYUSERSCHEDULE           USERSCHEDULE
 DisplayUserSchedule           caseID                        CASE_ID                                 DISPLAYUSERSCHEDULE           CASEID
 AppealCancellation            appealCancellationID          APPEAL_CANCELLATION_ID                  APPEALCANCELLATION            APPEALCANCELLATIONID
 
 
 
 SELECT COALESCE(CRE.PLANUPDATETXT, CP.ORIGRCVRYRTWPLNTXT)  ,
       MIH.DUEDATE                                         ,
       COALESCE(CPE.BUSADDEDDTM, CP.ORIGRCVRYRTWPLNDTM)    ,
       CRE.FCTAFFECTINGTXT                                 ,
       RTWF.OTHERTXT                                       ,
       COALESCE(CPE.BUSADDEDUSERID, CP.ORIGRCVRYRTWPLNUSR) ,
       CRE.RCVRYRTWPRGRSTPCD                               ,
       RTWF.RTWFACTORTYPECD
INTO   :origRcvryRtwPlnTxt_CP ,
       :dueDate_MIH           ,
       :origRcvryRtwPlnDtm_CP ,
       :fctAffectingTxt_CRE   ,
       :otherTxt_RTWF         ,
       :origRcvryRtwPlnUsr_CP ,
       :rcvryRtwPrgrsTpCd_CRE ,
       :rtwFactorTypeCd_RTWF
FROM   CLMPLN                    AS CP
       LEFT OUTER JOIN CLMPLNEVT AS CPE
       ON     CPE.CLMPLNID          = CP.CLMPLNID
       AND    CPE.RECORDSTATUSCODE  =:recordStatusCodeRST1
       AND    CP.RECORDSTATUSCODE   =:recordStatusCodeRST1
       AND    CPE.CLMPLNEVTSTTSTPCD =:clmPlnEvtSttsTpCdComplete_CPE
       LEFT OUTER JOIN RTWFACTOR AS RTWF
       ON     RTWF.CLMPLNID         = CP.CLMPLNID
       AND    RTWF.RECORDSTATUSCODE =:recordStatusCodeRST1
       LEFT OUTER JOIN CLMREVIEWEVT AS CRE
       ON     CRE.CLMPLNEVTID = CRE.CLMPLNEVTID
       LEFT OUTER JOIN MILESTONEINSTHIST AS MIH
       ON     MIH.MILESTONEINSTHISID = CRE.MILESTONEINSTHISID
       AND    MIH.RECORDSTATUSTYPE   =:recordStatusTypeRST1_MIH
WHERE  CP.CLMPLNID                   =:claimPlanIDINPUT_CP
AND
       (
              RTWF.BUSADDEDDTM =
              (SELECT MAX(RTWF2.BUSADDEDDTM)
              FROM    RTWFACTOR RTWF2
              WHERE   RTWF2.CLMPLNID         = CP.CLMPLNID
              AND     RTWF2.recordStatusCode = :recordStatusCodeRST1
              )
       OR     NOT EXISTS
              (SELECT 1
              FROM    RTWFACTOR RTWF3
              WHERE   RTWF3.CLMPLNID         = CP.CLMPLNID
              AND     RTWF3.recordStatusCode = :recordStatusCodeRST1
              )
       )
AND
       (
              CPE.EVENTDTM =
              (SELECT MAX(CPE2.EVENTDTM)
              FROM    CLMPLNEVT CPE2
              WHERE   CPE2.CLMPLNID          = CP.CLMPLNID
              AND     CPE2.CLMPLNEVTTYPECD =:clmPlnEvtTypeCdClaimReview_CPE3
              AND     CPE2.CLMPLNEVTSTTSTPCD = 'Complete'
              AND     CPE2.recordStatusCode  = :recordStatusCodeRST1
              )
       OR     NOT EXISTS
              (SELECT 1
              FROM    CLMPLNEVT CPE3
              WHERE   CPE3.CLMPLNID          = CP.CLMPLNID
              AND     CPE3.CLMPLNEVTTYPECD =:clmPlnEvtTypeCdClaimReview_CPE3
              AND     CPE3.CLMPLNEVTSTTSTPCD = 'Complete'
              AND     CPE3.recordStatusCode  = :recordStatusCodeRST1
              )
       )

Input Struct
clmPlnEvtTypeCdClaimReview_CPE:CLAIM_PLAN_EVENT_TYPE
recordStatusCodeRST1:RECORD_STATUS_CODE
recordStatusTypeRST1_MIH:RECORD_STATUS_TYPE_CODE
claimPlanIDINPUT_CP:INTERNAL_ID
clmPlnEvtSttsTpCdComplete_CPE:CLAIM_PLAN_EVENT_STATUS_TYPE


Output Struct
otherTxt_RTWF:RTW_FACTOR_OTHER_TEXT
rtwFactorTypeCd_RTWF:RTW_FACTOR_TYPE
origRcvryRtwPlnUsr_CP:BUS_ADDED_USER_ID
rcvryRtwPrgrsTpCd_CRE:RECOVERY_RTW_PROGRESS_TYPE
origRcvryRtwPlnTxt_CP:TEXT_8000
origRcvryRtwPlnDtm_CP:CURAM_DATETIME
fctAffectingTxt_CRE:TEXT_8000
dueDate_MIH:DUE_DATE 



SELECT   A.BUSADDEDUSERID     ,
         A.SORT_ORDER         ,
         A.MILESTONEINSTID    ,
         A.BUSADDEDDTM        ,
         A.DUEDATE            ,
         A.INSTANCESTATUSTYPE ,
         A.BUSLSTUPDUSERID
INTO     :busAddedUserID     ,
         :SORT_ORDER         ,
         :milestoneInstID    ,
         :busAddedDtm        ,
         :dueDate            ,
         :instanceStatusType ,
         :busLstUpdUserID
FROM     ( SELECT WMI.BUSADDEDUSERID    ,
                 '1' AS SORT_ORDER      ,
                 WMI.MILESTONEINSTID    ,
                 WMI.BUSADDEDDTM        ,
                 WMI.DUEDATE            ,
                 WMI.INSTANCESTATUSTYPE ,
                 WMI.BUSLSTUPDUSERID
         FROM    WCOMILESTONEINST        AS WMI
                 INNER JOIN WCOMILESTONE AS WM
                 ON      WM.MILESTONEID         = WMI.MILESTONEID
                 AND     WM.RECORDSTATUSCODE    =:recordStatusCodeRST1
                 AND     WM.MILESTONENAMETYPE   =:milestoneNameTypeINPUT_WM
                 AND     WMI.INSTANCESTATUSTYPE =:instanceStatusTypeMIS500
                 INNER JOIN PLANNEDSUBGOAL AS PS
                 ON      PS.PLANNEDSUBGOALID = WMI.PLANNEDSUBGOALID
                 AND     PS.RECORDSTATUS     =:recordStatusCodeRST1
                 INNER JOIN PLANNEDSGTMPLT AS PST
                 ON      PST.PLANNEDSUBGOALID = PS.PLANNEDSUBGOALID
                 INNER JOIN PLANNEDGRPTMPLT AS PGT
                 ON      PGT.PLANNEDGRPTMPLTID  = PST.PLANNEDGRPTMPLTID
                 AND     PGT.CLAIMCYCLEID IS NULL
                 INNER JOIN CASEHEADER AS CH
                 ON      CH.CASEID = WMI.CASEID
                 INNER JOIN CLAIMCYCLE AS CC
                 ON      CC.CLAIMID          = CH.INTEGRATEDCASEID
                 AND     CC.RECORDSTATUSCODE =:recordStatusCodeRST1
                 AND     CC.CLAIMCYCLEID     =:claimCycleIDINPUT_CC
         
         UNION
         
         SELECT WMI.BUSADDEDUSERID     ,
                '2' AS SORT_ORDER      ,
                WMI.MILESTONEINSTID    ,
                WMI.BUSADDEDDTM        ,
                WMI.DUEDATE            ,
                WMI.INSTANCESTATUSTYPE ,
                WMI.BUSLSTUPDUSERID
         INTO   :busAddedUserID_WMI     ,
                :SORT_ORDER             ,
                :milestoneInstID_WMI    ,
                :busAddedDtm_WMI        ,
                :dueDate_WMI            ,
                :instanceStatusType_WMI ,
                :busLstUpdUserID_WMI
         FROM   WCOMILESTONEINST        AS WMI
                INNER JOIN WCOMILESTONE AS WM
                ON     WM.MILESTONEID         = WMI.MILESTONEID
                AND    WM.RECORDSTATUSCODE    =:recordStatusCodeRST1
                AND    WM.MILESTONENAMETYPE   =:milestoneNameTypeINPUT_WM
                AND    WMI.INSTANCESTATUSTYPE =:instanceStatusTypeMIS501_WMI
                INNER JOIN PLANNEDSUBGOAL AS PS
                ON     PS.PLANNEDSUBGOALID = WMI.PLANNEDSUBGOALID
                AND    PS.RECORDSTATUS     =:recordStatusCodeRST1
                INNER JOIN PLANNEDSGTMPLT AS PST
                ON     PST.PLANNEDSUBGOALID = PS.PLANNEDSUBGOALID
                INNER JOIN PLANNEDGRPTMPLT AS PGT
                ON     PGT.PLANNEDGRPTMPLTID  = PST.PLANNEDGRPTMPLTID
                AND    PGT.CLAIMCYCLEID IS NULL
                INNER JOIN CASEHEADER AS CH
                ON     CH.CASEID = WMI.CASEID
                INNER JOIN CLAIMCYCLE AS CC
                ON     CC.CLAIMID          = CH.INTEGRATEDCASEID
                AND    CC.RECORDSTATUSCODE =:recordStatusCodeRST1
                AND    CC.CLAIMCYCLEID     =:claimCycleIDINPUT_CC
         WHERE  EXISTS
                (SELECT 1
                FROM    MILESTONEINSTHIST MIH
                WHERE   MIH.MILESTONEINSTID    = WMI. MILESTONEINSTID
                AND     MIH. INSTANCESTATUSTYPE=:instanceStatusTypeMIS500
                AND     MIH.RECORDSTATUSTYPE   = :recordStatusCodeRST1
                )
         )
         A
ORDER BY A.SORT_ORDER ASC,
         A.BUSADDEDDTM DESC
FETCH FIRST ROW ONLY;
       
       
       
       
Input Struct
instanceStatusTypeMIS500:MILESTONE_INSTANCE_STATUS_CODE
instanceStatusTypeMIS501_WMI:MILESTONE_INSTANCE_STATUS_CODE
recordStatusCodeRST1:RECORD_STATUS_CODE
claimCycleIDINPUT_CC:CLAIM_CYCLE_ID
milestoneNameTypeINPUT_WM:MILESTONE_NAME_CODE


Output Struct
instanceStatusType:MILESTONE_INSTANCE_STATUS_CODE
milestoneInstID:MILESTONE_INSTANCE_ID
SORT_ORDER:NEED_HUMAN_INPUT
busAddedUserID:BUSINESS_ADDED_USERID
busLstUpdUserID:BUSINESS_LASTUPD_USERID
dueDate:CURAM_DATE
busAddedDtm:CURAM_DATETIME 




SELECT   WMI.BUSADDEDUSERID     ,
         '1' AS SORT_ORDER      ,
         WMI.MILESTONEINSTID    ,
         WMI.BUSADDEDDTM        ,
         WMI.DUEDATE            ,
         WMI.INSTANCESTATUSTYPE ,
         WMI.BUSLSTUPDUSERID
INTO     :busAddedUserID_WMI     ,
         :SORT_ORDER             ,
         :milestoneInstID_WMI    ,
         :busAddedDtm_WMI        ,
         :dueDate_WMI            ,
         :instanceStatusType_WMI ,
         :busLstUpdUserID_WMI
FROM    ( SELECT WMI.BUSADDEDUSERID     ,
                 '1' AS SORT_ORDER      ,
                 WMI.MILESTONEINSTID    ,
                 WMI.BUSADDEDDTM        ,
                 WMI.DUEDATE            ,
                 WMI.INSTANCESTATUSTYPE ,
                 WMI.BUSLSTUPDUSERID
         INTO    :busAddedUserID     ,
                 :SORT_ORDER         ,
                 :milestoneInstID    ,
                 :busAddedDtm        ,
                 :dueDate            ,
                 :instanceStatusType ,
                 :busLstUpdUserID
         FROM    WCOMILESTONEINST        AS WMI
                 INNER JOIN WCOMILESTONE AS WM
                 ON      WM.MILESTONEID         = WMI.MILESTONEID
                 AND     WM.RECORDSTATUSCODE    =:recordStatusCodeRST1
                 AND     WM.MILESTONENAMETYPE   =:milestoneNameTypeINPUT_WM
                 AND     WMI.INSTANCESTATUSTYPE =:instanceStatusTypeMIS500_WMI
                 INNER JOIN PLANNEDSUBGOAL AS PS
                 ON      PS.PLANNEDSUBGOALID = WMI.PLANNEDSUBGOALID
                 AND     PS.RECORDSTATUS     =:recordStatusCodeRST1
                 INNER JOIN PLANNEDSGTMPLT AS PST
                 ON      PST.PLANNEDSUBGOALID = PS.PLANNEDSUBGOALID
                 INNER JOIN PLANNEDGRPTMPLT AS PGT
                 ON      PGT.PLANNEDGRPTMPLTID = PST.PLANNEDGRPTMPLTID
                 AND     PGT.CLAIMCYCLEID      =:claimCycleIDINPUT_PGT
         
         UNION
         
         SELECT WMI.BUSADDEDUSERID     ,
                '2' AS SORT_ORDER      ,
                WMI.MILESTONEINSTID    ,
                WMI.BUSADDEDDTM        ,
                WMI.DUEDATE            ,
                WMI.INSTANCESTATUSTYPE ,
                WMI.BUSLSTUPDUSERID
         INTO   :busAddedUserID_WMI     ,
                :SORT_ORDER             ,
                :milestoneInstID_WMI    ,
                :busAddedDtm_WMI        ,
                :dueDate_WMI            ,
                :instanceStatusType_WMI ,
                :busLstUpdUserID_WMI
         FROM   WCOMILESTONEINST        AS WMI
                INNER JOIN WCOMILESTONE AS WM
                ON     WM.MILESTONEID         = WMI.MILESTONEID
                AND    WM.RECORDSTATUSCODE    =:recordStatusCodeRST1
                AND    WM.MILESTONENAMETYPE   =:milestoneNameTypeINPUT_WM
                AND    WMI.INSTANCESTATUSTYPE =:instanceStatusTypeMIS501_WMI
                INNER JOIN PLANNEDSUBGOAL AS PS
                ON     PS.PLANNEDSUBGOALID = WMI.PLANNEDSUBGOALID
                AND    PS.RECORDSTATUS     =:recordStatusCodeRST1
                INNER JOIN PLANNEDSGTMPLT AS PST
                ON     PST.PLANNEDSUBGOALID = PS.PLANNEDSUBGOALID
                INNER JOIN PLANNEDGRPTMPLT AS PGT
                ON     PGT.PLANNEDGRPTMPLTID = PST.PLANNEDGRPTMPLTID
                AND    PGT.CLAIMCYCLEID      =:claimCycleIDINPUT_PGT
         WHERE  EXISTS
                (SELECT 1
                FROM    MILESTONEINSTHIST MIH
                WHERE   MIH.MILESTONEINSTID    = WMI. MILESTONEINSTID
                AND     MIH. INSTANCESTATUSTYPE=:instanceStatusTypeMIS500_WMI
                AND     MIH.RECORDSTATUSTYPE   = :recordStatusCodeRST1
                )
         )
         A
ORDER BY A.SORT_ORDER ASC,
         A.BUSADDEDDTM DESC
FETCH FIRST ROW ONLY
       
       
       
       
Input Struct
instanceStatusTypeMIS500_WMI:MILESTONE_INSTANCE_STATUS_CODE
instanceStatusTypeMIS501_WMI:MILESTONE_INSTANCE_STATUS_CODE
claimCycleIDINPUT_PGT:CLAIM_CYCLE_ID
milestoneNameTypeINPUT_WM:MILESTONE_NAME_CODE
recordStatusCodeRST1:RECORD_STATUS_CODE 


Output Struct
instanceStatusType:MILESTONE_INSTANCE_STATUS_CODE
milestoneInstID:MILESTONE_INSTANCE_ID
SORT_ORDER:NEED_HUMAN_INPUT
busAddedUserID:BUSINESS_ADDED_USERID
busLstUpdUserID:BUSINESS_LASTUPD_USERID
dueDate:CURAM_DATE
busAddedDtm:CURAM_DATETIME 
